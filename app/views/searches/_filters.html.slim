= simple_form_for @filters, url: search_path, method: :get do |f|
  .search-field-large
    = f.input_field :q, id: 'q-large', name: :q
    = submit_tag 'Search', name: nil

  .filter-header
    h3 Filter
    a.clear-all href='#' clear all

  .filter-row.js-same-height-container
    .filter-date.js-same-height
      .filter-block
        h3 Date
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          .date-block
            = f.input :date_from, label: 'From:', placeholder: 'dd/mm/yyyy', input_html: { name: :date_from }
          .date-block
            = f.input :date_to, label: 'To:', placeholder:'dd/mm/yyyy', input_html: { name: :date_to }
          .date-block.format
            = f.input :date_format, as: :radio_buttons, collection: [['AH', 'ah'], ['CE', 'ce']], item_wrapper_class: 'radio-label', input_html: { name: 'date_format'}, label: false

    .filter-language.js-same-height
      .filter-block
        h3 Original Language
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul
            - @languages.each do |language|
              li
                label.check-label
                  input type='checkbox' name='language[]' value=language.id checked=(f.object.language && f.object.language.include?(language.id.to_s))
                  = language.name

    .filter-author.js-same-height
      .filter-block
        h3 Author/Commentator
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          select name='author[]' multiple=true size=4
            - @authors.each do |author|
              option value=author.id selected=(f.object.author && f.object.author.include?(author.id.to_s)) = author.name
          span.multiple-instructions Ctrl-click to select multiple people.

  .filter-row.js-same-height-container
    .filter-topics-themes.js-same-height
      .filter-block
        h3 Topics
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul
            - @topics.each do |topic|
              li
                label.check-label
                  input type='checkbox' name='topic[]' value=topic.id checked=(f.object.topic && f.object.topic.include?(topic.id.to_s))
                  = topic.name
      
      .filter-block
        h3 Themes
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul
            - @themes.each do |theme|
              li
                label.check-label
                  input type='checkbox' name='theme[]' value=theme.id checked=(f.object.theme && f.object.theme.include?(theme.id.to_s))
                  = theme.name

    .filter-regions.js-same-height
      .filter-block
        h3 Geographic Regions
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul.filter-hierarchy
            = render partial: 'searches/hierarchy', locals: { hash: @regions, field_name: :region, input_name: 'region[]', f: f }

    .filter-eras.js-same-height
      .filter-block
        h3 Empires & Eras
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul.filter-hierarchy
            = render partial: 'searches/hierarchy', locals: { hash: @eras, field_name: :era, input_name: 'era[]', f: f }

    .filter-document-types.js-same-height
      .filter-block
        h3 Document Types
        a.expand-contract href='#' Expand/Contract 
        .filter-content
          = render 'searches/all'
          ul.filter-hierarchy
            = render partial: 'searches/hierarchy', locals: { hash: @document_types, field_name: :document_type, input_name: 'document_type[]', f: f }
